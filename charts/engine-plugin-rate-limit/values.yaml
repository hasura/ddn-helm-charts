global:
  serviceAccount:
    enabled: true
  imagePullSecrets:
    - hasura-image-pull

useReleaseName: true

# Container Configs
image:
  repository: "gcr.io/hasura-ee/engine-plugin-rate-limit"
  tag: "v1.0.0"
replicas: "1"
httpPort: 3000
healthChecks:
  enabled: true
  livenessProbe: |
    httpGet:
      path: /health
      port: 3000
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 30
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe: |
    httpGet:
      path: /health
      port: 3000
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 30
    successThreshold: 1
    timeoutSeconds: 10
securityContext:
  runAsUser: 10001
  fsGroup: 10001
  runAsNonRoot: true

extraVolumes: |
  - name: rate-limit-config
    configMap:
      name: {{ .Release.Name }}-engine-plugin-rate-limit
extraVolumeMounts: |
  - mountPath: /app/config
    name: rate-limit-config

resources: |
  requests:
    cpu: 500m
    memory: 1048Mi
  limits:
    memory: 2048Mi

configs:
  deployRedis: true
  enginePluginRateLimitAuthToken: "randomtoken"
  enginePluginRateLimitConfig:
    redisUrl: ""
    otherConfig: |
      {
      "rate_limit": {
        "default_limit": 10,
        "time_window": 60,
        "excluded_roles": [],
        "key_config": {
          "from_headers": [],
          "from_session_variables": [],
          "from_role": true
        },
        "unavailable_behavior": {
          "fallback_mode": "deny"
        },
        "role_based_limits": [
          {
            "role": "user",
            "limit": 11
          },
          {
            "role": "admin",
            "limit": 10
          }
        ]
      }
      }

env: |
  - name: PORT
    value: "3000"
  - name: DEBUG
    value: "rate-limit*"
  - name: OTEL_EXPORTER_OTLP_ENDPOINT
    value: "http://dp-otel-collector:4317"
  - name: OTEL_SERVICE_NAME
    value: "engine-plugin-rate-limit"
  - name: HASURA_DDN_PLUGIN_CONFIG_PATH
    value: "/app/config"