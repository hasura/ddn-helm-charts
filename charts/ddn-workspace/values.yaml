global:
  domain: ""
  subDomain: true
  containerRegistry: "gcr.io/hasura-ee"
  certIssuer: "letsencrypt-prod"
  uriScheme: "https"
  persistence:
    enabled: true
  serviceCatalog:
    - name: data
      port: 8080
    - name: ddn-cps-engine
      port: 3000
  serviceAccount:
    enabled: true
  routes:
    enabled: false

additionalLabels:
  group: ddn-workspace

networkPolicy:
  ingress:
    enabled: true
  egress:
    enabled: true
    allowedApps:
      - data
      - ddn-cps-engine

useReleaseName: true

# Container Configs
image:
  repository: "ddn-native-workspace"
  tag: ""
replicas: "1"
httpPort: 8123
setControlPlaneUrls: true
persistence:
  enabled: true
  size: 10Gi
healthChecks:
  enabled: true
  livenessProbe: |
    httpGet:
      path: /healthz
      port: 8123
  readinessProbe: |
    httpGet:
      path: /healthz
      port: 8123
securityContext:
  runAsUser: 10001
  fsGroup: 10001
  runAsNonRoot: true

resources: |
  requests:
    cpu: 500m
    memory: 2048Mi
  limits:
    memory: 2048Mi

hostAliases:
  - ip: "127.0.0.1"
    hostnames:
      - "local.hasura.dev"

dataHost: "http://data:8080"
ddnCpsEngineHost: "http://ddn-cps-engine:3000"
consoleUrl: ""
ddnPromptqlEndpoint: ""
skipTlsVerify: false
secrets:
  password: ""

# Additional Container Envs
env: |
  - name: CODE_SERVER_PORT
    value: "8123"
  - name: HASHED_PASSWORD
    valueFrom:
      secretKeyRef:
        name: {{ include "common.secretsName" $ }}
        key: WORKSPACE_PASSWORD
  - name: HASURA_DDN_INSECURE_SKIP_TLS_VERIFY
    value: {{ .Values.skipTlsVerify | quote }}
  {{- if .Values.setControlPlaneUrls }}
  - name: HASURA_DDN_CONSOLE_HOST
    value: {{ required "DDN Console URL (.Values.consoleUrl) is required" .Values.consoleUrl | quote }}
  - name: HASURA_DDN_CONTROL_PLANE_HOST
    value: {{ required "Data URL is required" .Values.dataHost | quote }}
  - name: HASURA_DDN_CONNECTOR_HUB_REGISTRY_HOST
    value: {{ required "DDN CPS Engine URL is required" .Values.ddnCpsEngineHost | quote }}
  - name: HASURA_DDN_PROMPTQL_ENDPOINT
    value: {{ .Values.ddnPromptqlEndpoint | quote }}
  - name: HASURA_DDN_PROMPTQL_CONSOLE_HOST
    value: {{ required "DDN Console URL (.Values.consoleUrl) is required" .Values.consoleUrl | quote }}
  {{- end }}


extraVolumes: |
  - name: ddn-workspace-data
  {{- if and (.Values.persistence).enabled (.Values.global.persistence).enabled }}
    persistentVolumeClaim:
      claimName: {{ include "common.name" . }}-data
  {{- else }}
    emptyDir: {}
  {{- end }}

extraVolumeMounts: |
  - name: ddn-workspace-data
    mountPath: "/workspace"

# Ingress Configs
# enable ingress / routes only if there is no internal network connectivity
# between control plane and data planes
ingress:
  enabled: true
  ingressClassName: nginx
  hostName: '{{ template "ddn-workspace.domain" . }}'
  additionalAnnotations: '{{ template "ddn-workspace.ingress.annotations" . }}'
  path: '{{ template "ddn-workspace.path" . }}'

routes:
  enabled: false
